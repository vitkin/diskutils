.TH CONFINEDRV 8 "November 2013" "version 1.2.1" "Maintenance Commands"

.SH NAME
confinedrv \- limit the partitions of an existing drive to read-only, read-write or no-read access

.SH SYNOPSIS
.B confinedrv
.RI [ OPTIONS ]
.RB [ --ra ] 
.IR sdx=sda1,2,3 " [" "sdy=sdb5,6 ..." "]"
.br
.B confinedrv
.RI [ OPTIONS ]
.RB [ --ra ]
.IB sdx=sda :r 1,2 :w 3 :e 8 :z 4,5,6 
.IB \fR[\fIsdy=sdb :w 1 :r "2 ...\fR]"
.br
.B confinedrv
.RI [ OPTIONS ]
.RB [ --ra ]
.IB "sdy=sda1,7:r3  " " sdy7" =/partitionimages/ sdb7.part
.RI " [ " ... " ] "
.br
.B confinedrv 
.RI [ OPTIONS ] 
.RB { --remove | -r | -d } 
.IR sdx " [ " "sdy ..."  " ] "
.br
.B confinedrv
.RI [ OPTIONS ]
.BI --loopusage " sdx [ sdy ... ]"
.br
.B confinedrv
.RI [ OPTIONS ] 
.RB { --info | -i  }
.IR sdx " [ " "sdy ..." " ] "
.br
.B confinedrv readout-mbr 
.BI --from " sda"
.BI --into " /boot/sda.mbr"
.br
.BI "confinedrv --version / --license / --help "
.br

.SH DESCRIPTION
This tool allows you to limit existing partitions to write, read only, zero on read or no-read access by creating an own virtual drive with confined access rights mirroring the original (\fINo read access simulates a disk error.\fR). This can f.i. be used by a virtual machine to safely boot into one or more operating systems that reside on the same disk as your host operating system. Since version 1.7.6 the additional possibility is given to fade in a partition image file previously backed up with \fIdd\fR or \fIddrescue\fR (as shown in the third disk setup example above.). Such an image must have exactly the same size as the partition it replaces inside the virtual drive.

.SH SEMANTIC
confinedrv will mirror your drive 1:1 giving read and write access to the specified sections on your disk. Only the mentioned partitions will be writable (\fIsimple format\fR). If the \fI--ra\fR option is given then it will addtionally grant all other visible partitions read only access. The second command line format allows to specify exactly for which partition read, write, zero or error on access should be granted. Intermediate space between partitions will be zeroed out by default (\fI--gap option\fR) as long as it does not pertain to the extended partition. Extended partition intermediate spaces contain a linked list of partition tables which need to remain readable to ensure correct recognition of all partitions though they may themselves not be accessible (\fIThese intermediate spaces will always be read only no matter what options are given.\fR). Note that specifying a whole extended partition as writable will even make these intermediate spaces writable so that repartitioning would still be possible to a certain extent if you would do that directly without tools. To avoid this do not specify the whole extended partition as writable but rather all its individual partitions because this will protect the partition table from suffering any damage.

.SH WARNING
confinedrv works on top of Device Mapper and can only limit access rights on a per memory page basis. On x86 systems a memory page used to be 4096 bytes while disk space keeps being organized in units of 512 bytes (4096*1/4=512). Be sure to align partitions to page bounderies when creating partitions with fdisk (\fIf.i. parted -a optimal /dev/sdf or fdisk -H 32 -S 32 for 512KB alignment as also recommended for SSDs (32*32*512 = 2^5 * 2^5 * 512 = 1024 * 512 = 512K)\fR). Otherwise confinedrv will not be fully capable of protecting your drive (up to three blocks at the beginning and end of each partition may end up having extended access rights (\fI see --info or --verbose\fR). If you choose to fade in a partition image from file at a non aligned position confinedrv should basically be capable of doing so. However up to \fI3*512\fR Bytes including the partitions boot record at the beginning of the image may be ignored and taken from the base medium instead.

.SH OPTIONS
.TP 22
.B --ra
make all visible partitions at least readable (\fIdefault zeroeing out.\fR).
.TP
.RI "\fB--mbr\fR {" err | zero | ro | rw }
set access rights for the master boot record, the master partition table and for everything before the first partition starts (\fIWould allow repartitioning only as long as there is no extended partition\fR). As the MBR is only 512 bytes it is not possible to protect the partition table once you wanna have the MBR writeable; default is ro.
.TP
.RI "\fB--gap\fR {" err | zero | ro | rw }
set access rights for gaps between primary partitions (\fIgaps inside extended partition are always read-only.\fR); default is zero.
.TP
.B "--verbose / -v"
be more verbose; show mapping table for the drive to be created
.TP
.B "--quiet / -q"
be less verbose; currently: do not warn about misaligned partitions; do not print the heading.
.TP
.B --license / -l
show license information.
.TP
.B --help
short summary of this man page
.TP
.B --version
print current program version
  
.SH ADDITIONAL COMMANDS
.TP
.RB { --remove | -r | -d } "\fI MAPPED_DRIVE  [ MAPPED_DRIVE ... ]\fR"
unmap a drive that was previously mapped with confinedrv
.TP
.RB [ --noannot "] {" --info | -i }  "\fI MAPPED_DRIVE  [ MAPPED_DRIVE ... ] \fR"
retrieve information about mapped drives: currently prints the mapping table
--noannot: do not annotate partition start and end numbers with symbolic names.
.TP
.RI "\fB--loopusage\fR [ " "MAPPED_DRIVE ... " ]
show all loop devices in use or all loop devices used by the given virtual drives
.TP
.B readout-mbr --from \fIsda \fB--into\fI /boot/sda.mbr\fR
read out the disk space before the first partition from \fI/dev/sda\fR which includes the Master Boot Record and at least part of the partition table and save that to the file \fI/boot/sda.mbr\fR.
.TP

.SH EXAMPLES
\fBconfinedrv --ra sdx=sda1,3 sdy=sda2,5,6,7\fP
.br
\fBconfinedrv --mbr rw sdy=sdb:r3:w5,6 mbr=/media/esatahdd/partitionimages/sdb-alternative.mbr \fP
.br
\fBconfinedrv sdz=sdb:r3:w5,6 sdz5=/media/esatahdd/partitionimages/sdb5.part \fP
.br
\fBconfinedrv -d sdx sdy sdz\fP
.br

.SH RETURN VALUES
\ \ \ 2xx ... confinedrv specific error codes
.br
   200 ~ EPERM (not run as root) 
   201 ~ wrong command line format \fI(see usage --help or this man page)\fR
   202 ~ all loop devices already in use \fI(losetup -f returns an error)\fR
   203 ~ base device not found \fI(f.i. /dev/sda)\fR
   206 ~ could not free loop devices \fI(using --freeloop or -d/-r/--remove)\fR
   207 ~ overlapping partitions (extended partition and subpartition of extended partition) specified or partition does not exist
   208 ~ unsupported feature \fI(extended partition tables only suppported for disks with msdos partition tables)\fR
   209 ~ \fI/dev/shm\fR mounted while confinedrv was first invoked without so that there are still residuals in \fI/tmp\fR which can not be auto-moved to \fI/dev/shm\fR.
   210 ~ file already exists \fI(currently only returned by readout-mbr)\fR
   211 ~ file or device not found \fI(currently only returned by readout-mbr)\fR
   222 ~ page size not divisible by 512
   223 ~ file size of partition image does not match size of the partition to be replaced
   244 ~ internal error

.SH FURTHER INFORMATION
look for detailed usage informations at http://www.elstel.org/qemu
.br
get informed about the latest updates via http://www.elstel.org/elstel.rss
.br
note: your packager may have included an offline version of the respective web page with usage information for confinedrv at elstel.org in /usr/share/doc[/packages]/confinedrv/index.html

.SH NOTE
confinedrv has preliminary support for GPT partition tables since version 1.7.2 (It simply makes the start and end of the virtual drive readable which may result to be larger in size than the GPT partition table.). While UEFI based machines will use the new GPT format by default you may still use traditional MSDOS partition tables for drives up to 1TB which is also the default for elder BIOS based systems.

.SH SEE ALSO
.BR kpartx (8),
.BR qemu (1),
.BR dmsetup (8),
.BR losetup (8),
.BR parted (8),
.BR dd (1),
.BR ddrescue (1),
.BR getconf (1).

.SH AUTHORS

.B confinedrv
was invented, designed and programmed by Elmar Stellnberger <estellnb@elstel.org> (other emails: estellnb@gmail.com, estellnb@yahoo.de).

.SH LICENSE
This program may be used under the terms of GPLv3; see: https://www.gnu.org/licenses/gpl-3.0.en.html.
.br
If you apply changes please sign our contributor license agreement at https://www.elstel.org/license/CLA-elstel.pdf so that your changes can be included into the main trunk at www.elstel.org/qemu/
.br
(c) copyright by Elmar Stellnberger 2016
 
